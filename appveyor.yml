environment:
  global:
    CRATE_NAME: committed
    RUST_VERSION: stable
    #APPVEYOR_CACHE_SKIP_RESTORE: true

  matrix:
  # Stable channel
  - TARGET: i686-pc-windows-msvc
    CHANNEL: stable
  - TARGET: x86_64-pc-windows-msvc
    CHANNEL: stable
  # Beta channel
  - TARGET: x86_64-pc-windows-msvc
    CHANNEL: beta
  # Nightly channel
  - TARGET: x86_64-pc-windows-msvc
    CHANNEL: nightly

install:
- ps: >-
    $Env:PATH += ';C:\msys64\usr\bin'
- curl -sSf -o rustup-init.exe https://win.rustup.rs/
- rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
- set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
- rustc -Vv
- cargo -V

test_script:
- cargo check --verbose
- cargo test  --verbose
- git log --graph --oneline
- echo "APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH=%APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH%"
- echo "APPVEYOR_PULL_REQUEST_HEAD_COMMIT=%APPVEYOR_PULL_REQUEST_HEAD_COMMIT%"
- echo "APPVEYOR_REPO_COMMIT =%APPVEYOR_REPO_COMMIT %"
# The extra verbosity is to help verify the example we're giving works and doesn't need to be copied
- IF not "%APPVEYOR_PULL_REQUEST_HEAD_COMMIT%"=="" (cargo run -- HEAD~..HEAD^^2 --no-merge-commit -vvvv)

before_deploy:
- cargo rustc --target %TARGET% --release --bin %CRATE_NAME% -- -C lto
- ps: ci\tarball.ps1
deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: 83A89D1PTXLWrdrJz9L7Jyh0eXJPR6rusob9UqnYdXftn+b3OqN3dx1hBuABJL4z
  description: ''
  on:
    CHANNEL: stable
    appveyor_repo_tag: true
  provider: GitHub

branches:
  only:
  # Release tags
  - /^v\d+\.\d+\.\d+.*$/
  - master

cache:
- C:\Users\appveyor\.cargo\registry

notifications:
- provider: Email
  on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
